 /******************************************************
  * PLEASE DO NOT EDIT THIS FILE
  * the verification process may break
  * ***************************************************/

 'use strict';

 var fs = require('fs');
 var express = require('express');
 var app = express();
 var mongoose = require('mongoose');
 var config = require('./config.js');
 var urlController = require('./api/url.controller.js');

 mongoose.connect(config.mongo.uri, config.mongo.options);
 mongoose.connection.on('error', function(err) {
     console.error('MongoDB connection error: ' + err);
     process.exit(-1);
 });

 var utils = require('./utils.js');
 if (!process.env.DISABLE_XORIGIN) {
     app.use(function(req, res, next) {
         var allowedOrigins = ['https://narrow-plane.gomix.me', 'https://www.freecodecamp.com'];
         var origin = req.headers.origin || '*';
         if (!process.env.XORIG_RESTRICT || allowedOrigins.indexOf(origin) > -1) {
             console.log(origin);
             res.setHeader('Access-Control-Allow-Origin', origin);
             res.header("Access-Control-Allow-Headers", "Origin, X-Requested-With, Content-Type, Accept");
         }
         next();
     });
 }

 app.use('/public', express.static(process.cwd() + '/public'));

 app.route('/_api/package.json')
     .get(function(req, res, next) {
         console.log('requested');
         fs.readFile(__dirname + '/package.json', function(err, data) {
             if (err) return next(err);
             res.type('txt').send(data.toString());
         });
     });

 app.route('/')
     .get(function(req, res) {
         res.sendFile(process.cwd() + '/views/index.html');
     })
 app.route('/shorten/*').get(function(req, res) {
     //  utils.shorten_url(req.params[0], function(shortURL) {
     //      if (shortURL) {
     //          var result = new Object();
     //          result.original_url = req.params[0];
     //          result.short_url = shortURL;
     //          res.send(result);
     //      } else {
     //          res.send({ error: "Invalid URL" });
     //      }
     //  });

     urlController.handleURL(req, res);
 });
app.route('/*').get(function(req, res){
  urlController.redirect(req,res);
});
 // Respond not found to all the wrong routes
 app.use(function(req, res, next) {
     res.status(404);
     res.type('txt').send('Not found');
 });

 // Error Middleware
 app.use(function(err, req, res, next) {
     if (err) {
         res.status(err.status || 500)
             .type('txt')
             .send(err.message || 'SERVER ERROR');
     }
 })

 app.listen(process.env.PORT || 80, function() {
     console.log('Node.js listening ...');
 });